@using LapTimer.Data

@using ChartJs.Blazor.ChartJS.LineChart
@using ChartJs.Blazor.ChartJS.Common.Axes
@using ChartJs.Blazor.ChartJS.Common.Axes.Ticks
@using ChartJs.Blazor.ChartJS.Common.Time
@using ChartJs.Blazor.ChartJS.Common.Enums
@using ChartJs.Blazor.Charts
@using ChartJs.Blazor.ChartJS.Common.Properties

@page "/accelerate"

<h3>加速度センサー</h3>

<table class="table table-striped">
    <thead>
        <tr>
            <th>軸</th>
            <th>加速度</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td>X軸</td>
            <td>@accelerometerWrapper.AccelerometerValue.Acceleration.X</td>
        </tr>
        <tr>
            <td>Y軸</td>
            <td>@accelerometerWrapper.AccelerometerValue.Acceleration.Y</td>
        </tr>
        <tr>
            <td>Z軸</td>
            <td>@accelerometerWrapper.AccelerometerValue.Acceleration.Z</td>
        </tr>
    </tbody>
</table>


@code {
    [Inject]
    private AccelerometerWrapper accelerometerWrapper { get; set; }

    private System.Timers.Timer _timer = new System.Timers.Timer(500); // 500ms間隔

    protected override void OnInitialized()
    {
        accelerometerWrapper.SensorStart();
        _timer.Elapsed += (sendor, e) =>
        {
            InvokeAsync(() => StateHasChanged());
        };
        _timer.AutoReset = true;
        _timer.Enabled = true;

        base.OnInitialized();
    }
}
